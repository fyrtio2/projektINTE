<?xml version="1.0" encoding="UTF-8"?>
<project name="module_game" default="compile.module.game">
  <dirname property="module.game.basedir" file="${ant.file.module_game}"/>
  
  <property name="module.jdk.home.game" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.game" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.game" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.game" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="game.output.dir" value="${module.game.basedir}/out/production/Game"/>
  <property name="game.testoutput.dir" value="${module.game.basedir}/out/test/Game"/>
  
  <path id="game.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="game.module.production.classpath">
    <path refid="${module.jdk.classpath.game}"/>
  </path>
  
  <path id="game.runtime.production.module.classpath">
    <pathelement location="${game.output.dir}"/>
  </path>
  
  <path id="game.module.classpath">
    <path refid="${module.jdk.classpath.game}"/>
    <pathelement location="${game.output.dir}"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0.jar"/>
  </path>
  
  <path id="game.runtime.module.classpath">
    <pathelement location="${game.testoutput.dir}"/>
    <pathelement location="${game.output.dir}"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.game">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.game">
    <patternset refid="excluded.from.module.game"/>
  </patternset>
  
  <path id="game.module.sourcepath">
    <dirset dir="${module.game.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="game.module.test.sourcepath">
    <dirset dir="${module.game.basedir}">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.game" depends="compile.module.game.production,compile.module.game.tests" description="Compile module Game"/>
  
  <target name="compile.module.game.production" depends="register.custom.compilers" description="Compile module Game; production classes">
    <mkdir dir="${game.output.dir}"/>
    <javac2 destdir="${game.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.game}/javac">
      <compilerarg line="${compiler.args.game}"/>
      <bootclasspath refid="game.module.bootclasspath"/>
      <classpath refid="game.module.production.classpath"/>
      <src refid="game.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.game"/>
    </javac2>
    
    <copy todir="${game.output.dir}">
      <fileset dir="${module.game.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.game.tests" depends="register.custom.compilers,compile.module.game.production" description="compile module Game; test classes" unless="skip.tests">
    <mkdir dir="${game.testoutput.dir}"/>
    <javac2 destdir="${game.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.game}/javac">
      <compilerarg line="${compiler.args.game}"/>
      <bootclasspath refid="game.module.bootclasspath"/>
      <classpath refid="game.module.classpath"/>
      <src refid="game.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.game"/>
    </javac2>
    
    <copy todir="${game.testoutput.dir}">
      <fileset dir="${module.game.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.game" description="cleanup module">
    <delete dir="${game.output.dir}"/>
    <delete dir="${game.testoutput.dir}"/>
  </target>
</project>